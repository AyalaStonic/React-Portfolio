{"ast":null,"code":"import React,{useEffect}from'react';import{capitalizeFirstLetter}from'../../utils/helpers';// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Nav(props){var currentTab=props.currentTab,handleTabChange=props.handleTabChange;useEffect(function(){document.title=capitalizeFirstLetter(currentTab.name);},[currentTab]);return/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsxs(\"ul\",{className:\"nav nav-tabs\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#about\",onClick:function onClick(){return handleTabChange('About');}// Check to see if the currentTab is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentTab==='About'?'nav-link active':'nav-link',children:\"About\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#portfolio\",onClick:function onClick(){return handleTabChange('Portfolio');}// Check to see if the currentTab is `Portfolio`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentTab==='Portfolio'?'nav-link active':'nav-link',children:\"Portfolio\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#contact\",onClick:function onClick(){return handleTabChange('Contact');}// Check to see if the currentTab is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentTab==='Contact'?'nav-link active':'nav-link',children:\"Contact\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#resume\",onClick:function onClick(){return handleTabChange('Resume');}// Check to see if the currentTab is `Resume`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentTab==='Resume'?'nav-link active':'nav-link',children:\"Resume\"})})]})});}export default Nav;","map":{"version":3,"names":["React","useEffect","capitalizeFirstLetter","Nav","props","currentTab","handleTabChange","document","title","name"],"sources":["/Users/ayalastonic/Desktop/test/src/components/Nav/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { capitalizeFirstLetter } from '../../utils/helpers';\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction Nav(props) {\n  const {\n    currentTab,\n    handleTabChange,\n\n  } = props;\n\n    useEffect(() => {\n      document.title = capitalizeFirstLetter(currentTab.name);\n    }, [currentTab]);\n\n\n  return (\n\n   \n    <nav>\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n          <a\n            href=\"#about\"\n            onClick={() => handleTabChange('About')}\n            // Check to see if the currentTab is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={currentTab === 'About' ? 'nav-link active' : 'nav-link'}\n          >\n            About\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"#portfolio\"\n            onClick={() => handleTabChange('Portfolio')}\n            // Check to see if the currentTab is `Portfolio`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={currentTab === 'Portfolio' ? 'nav-link active' : 'nav-link'}\n          >\n            Portfolio\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"#contact\"\n            onClick={() => handleTabChange('Contact')}\n            // Check to see if the currentTab is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={currentTab === 'Contact' ? 'nav-link active' : 'nav-link'}\n          >\n            Contact\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"#resume\"\n            onClick={() => handleTabChange('Resume')}\n            // Check to see if the currentTab is `Resume`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={currentTab === 'Resume' ? 'nav-link active' : 'nav-link'}\n          >\n            Resume\n          </a>\n        </li>\n    </ul>\n    </nav>\n\n  );\n}\n\nexport default Nav;\n"],"mappings":"AAAA,MAAOA,MAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,qBAAT,KAAsC,qBAAtC,CAEA;AACA;wFACA,QAASC,IAAT,CAAaC,KAAb,CAAoB,CAClB,GACEC,WADF,CAIID,KAJJ,CACEC,UADF,CAEEC,eAFF,CAIIF,KAJJ,CAEEE,eAFF,CAMEL,SAAS,CAAC,UAAM,CACdM,QAAQ,CAACC,KAAT,CAAiBN,qBAAqB,CAACG,UAAU,CAACI,IAAZ,CAAtC,CACD,CAFQ,CAEN,CAACJ,UAAD,CAFM,CAAT,CAKF,mBAGE,kCACA,YAAI,SAAS,CAAC,cAAd,wBACE,WAAI,SAAS,CAAC,UAAd,uBACI,UACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAE,yBAAMC,gBAAe,CAAC,OAAD,CAArB,EACT;AAHF,CAIE,SAAS,CAAED,UAAU,GAAK,OAAf,CAAyB,iBAAzB,CAA6C,UAJ1D,mBADJ,EADF,cAWI,WAAI,SAAS,CAAC,UAAd,uBACE,UACE,IAAI,CAAC,YADP,CAEE,OAAO,CAAE,yBAAMC,gBAAe,CAAC,WAAD,CAArB,EACT;AAHF,CAIE,SAAS,CAAED,UAAU,GAAK,WAAf,CAA6B,iBAA7B,CAAiD,UAJ9D,uBADF,EAXJ,cAqBI,WAAI,SAAS,CAAC,UAAd,uBACE,UACE,IAAI,CAAC,UADP,CAEE,OAAO,CAAE,yBAAMC,gBAAe,CAAC,SAAD,CAArB,EACT;AAHF,CAIE,SAAS,CAAED,UAAU,GAAK,SAAf,CAA2B,iBAA3B,CAA+C,UAJ5D,qBADF,EArBJ,cA+BI,WAAI,SAAS,CAAC,UAAd,uBACE,UACE,IAAI,CAAC,SADP,CAEE,OAAO,CAAE,yBAAMC,gBAAe,CAAC,QAAD,CAArB,EACT;AAHF,CAIE,SAAS,CAAED,UAAU,GAAK,QAAf,CAA0B,iBAA1B,CAA8C,UAJ3D,oBADF,EA/BJ,GADA,EAHF,CAiDD,CAED,cAAeF,IAAf"},"metadata":{},"sourceType":"module"}